ARM GAS  /var/folders/br/2wtqgb695v5djmfg7vx_4m7h0000gn/T//ccCxH94y.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.max2v,"ax",%progbits
  20              		.align	2
  21              		.global	max2v
  22              		.thumb
  23              		.thumb_func
  25              	max2v:
  26              	.LFB67:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** #include "adc.h"
  24:Src/main.c    **** #include "dma.h"
  25:Src/main.c    **** #include "gpio.h"
  26:Src/main.c    **** #include <math.h>
  27:Src/main.c    **** 
  28:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  29:Src/main.c    **** /* USER CODE BEGIN Includes */
  30:Src/main.c    **** 
  31:Src/main.c    **** /* USER CODE END Includes */
ARM GAS  /var/folders/br/2wtqgb695v5djmfg7vx_4m7h0000gn/T//ccCxH94y.s 			page 2


  32:Src/main.c    **** 
  33:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  34:Src/main.c    **** /* USER CODE BEGIN PTD */
  35:Src/main.c    **** 
  36:Src/main.c    **** /* USER CODE END PTD */
  37:Src/main.c    **** 
  38:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  39:Src/main.c    **** /* USER CODE BEGIN PD */
  40:Src/main.c    **** 
  41:Src/main.c    **** /* USER CODE END PD */
  42:Src/main.c    **** 
  43:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  44:Src/main.c    **** /* USER CODE BEGIN PM */
  45:Src/main.c    **** #define MAX_Delta (15.0/100.0)      //The max difference is 10%.
  46:Src/main.c    **** /* USER CODE END PM */
  47:Src/main.c    **** 
  48:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  49:Src/main.c    **** 
  50:Src/main.c    **** /* USER CODE BEGIN PV */
  51:Src/main.c    **** uint32_t ADC_Value[120];
  52:Src/main.c    **** uint32_t Pressure_1,Pressure_2,Pressure_3;
  53:Src/main.c    **** double delta_1,delta_2,delta_3;
  54:Src/main.c    **** uint8_t i;
  55:Src/main.c    **** 
  56:Src/main.c    **** 
  57:Src/main.c    **** 
  58:Src/main.c    **** /* USER CODE END PV */
  59:Src/main.c    **** 
  60:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  61:Src/main.c    **** void SystemClock_Config(void);
  62:Src/main.c    **** /* USER CODE BEGIN PFP */
  63:Src/main.c    **** void LEDSwitchOn(GPIO_TypeDef* LedPort, uint16_t LedPin);
  64:Src/main.c    **** void LEDSwitchOff(GPIO_TypeDef* LedPort, uint16_t LedPin);
  65:Src/main.c    **** void LED_KEY_SwitchOn(GPIO_TypeDef* KeyPort, uint16_t KeyPin,GPIO_TypeDef* LedPort, uint16_t LedPin
  66:Src/main.c    **** 
  67:Src/main.c    **** int pressButton(int press_1,int press_2,int press_3);
  68:Src/main.c    **** 
  69:Src/main.c    **** int maxValue(int a,int b,int c);
  70:Src/main.c    **** int max2v(int a,int b);
  71:Src/main.c    **** double calDelta(double a,double b,double c);
  72:Src/main.c    **** /* USER CODE END PFP */
  73:Src/main.c    **** 
  74:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  75:Src/main.c    **** /* USER CODE BEGIN 0 */
  76:Src/main.c    **** 
  77:Src/main.c    **** /* USER CODE END 0 */
  78:Src/main.c    **** 
  79:Src/main.c    **** /**
  80:Src/main.c    ****   * @brief  The application entry point.
  81:Src/main.c    ****   * @retval int
  82:Src/main.c    ****   */
  83:Src/main.c    **** int main(void)
  84:Src/main.c    **** {
  85:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  86:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  87:Src/main.c    ****   HAL_Init();
  88:Src/main.c    ****   /* Configure the system clock */
ARM GAS  /var/folders/br/2wtqgb695v5djmfg7vx_4m7h0000gn/T//ccCxH94y.s 			page 3


  89:Src/main.c    ****   SystemClock_Config();
  90:Src/main.c    ****   /* Initialize all configured peripherals */
  91:Src/main.c    ****   MX_GPIO_Init();
  92:Src/main.c    ****   MX_DMA_Init();
  93:Src/main.c    ****   MX_ADC1_Init();
  94:Src/main.c    **** 
  95:Src/main.c    **** 
  96:Src/main.c    ****   /* USER CODE BEGIN 2 */
  97:Src/main.c    ****   HAL_ADC_Start_DMA(&hadc1,(uint32_t*)&ADC_Value,120);
  98:Src/main.c    ****   HAL_GPIO_WritePin(LED1_GPIO_Port,LED1_Pin,0);
  99:Src/main.c    ****   HAL_GPIO_WritePin(LED2_GPIO_Port,LED2_Pin,0);
 100:Src/main.c    ****   HAL_GPIO_WritePin(LED3_GPIO_Port,LED3_Pin,0);
 101:Src/main.c    ****   /* USER CODE END 2 */
 102:Src/main.c    **** 
 103:Src/main.c    ****   /* Infinite loop */
 104:Src/main.c    ****   while (1)
 105:Src/main.c    ****   {
 106:Src/main.c    ****     HAL_Delay(500);
 107:Src/main.c    ****     Pressure_1=Pressure_2=Pressure_3=0;
 108:Src/main.c    **** 
 109:Src/main.c    ****     for(i=0;i<100;){
 110:Src/main.c    ****       Pressure_1+=ADC_Value[i++];
 111:Src/main.c    ****       Pressure_2+=ADC_Value[i++];
 112:Src/main.c    ****       Pressure_3+=ADC_Value[i++];
 113:Src/main.c    ****     }
 114:Src/main.c    ****     Pressure_1/=40;               //Calculate the average amount.
 115:Src/main.c    ****     Pressure_2/=40;
 116:Src/main.c    ****     Pressure_3/=40;
 117:Src/main.c    **** 
 118:Src/main.c    **** 
 119:Src/main.c    ****     if(pressButton(Pressure_1,Pressure_2,Pressure_3)==1){
 120:Src/main.c    ****       LEDSwitchOn(LED1_GPIO_Port,LED1_Pin);
 121:Src/main.c    ****       
 122:Src/main.c    ****       LEDSwitchOff(LED2_GPIO_Port,LED2_Pin);
 123:Src/main.c    ****       LEDSwitchOff(LED3_GPIO_Port,LED3_Pin);
 124:Src/main.c    ****     }
 125:Src/main.c    **** 
 126:Src/main.c    ****     if(pressButton(Pressure_1,Pressure_2,Pressure_3)==2){
 127:Src/main.c    ****       LEDSwitchOn(LED2_GPIO_Port,LED2_Pin);
 128:Src/main.c    **** 
 129:Src/main.c    ****       LEDSwitchOff(LED1_GPIO_Port,LED1_Pin);
 130:Src/main.c    ****       LEDSwitchOff(LED3_GPIO_Port,LED3_Pin);
 131:Src/main.c    ****     }
 132:Src/main.c    **** 
 133:Src/main.c    ****     if(pressButton(Pressure_1,Pressure_2,Pressure_3)==3){
 134:Src/main.c    ****       LEDSwitchOn(LED3_GPIO_Port,LED3_Pin);
 135:Src/main.c    **** 
 136:Src/main.c    ****       LEDSwitchOff(LED1_GPIO_Port,LED1_Pin);
 137:Src/main.c    ****       LEDSwitchOff(LED2_GPIO_Port,LED2_Pin);
 138:Src/main.c    ****     }
 139:Src/main.c    **** 
 140:Src/main.c    ****     if(pressButton(Pressure_1,Pressure_2,Pressure_3)==0){
 141:Src/main.c    ****       LEDSwitchOn(LED1_GPIO_Port,LED1_Pin);
 142:Src/main.c    ****       LEDSwitchOn(LED2_GPIO_Port,LED2_Pin);
 143:Src/main.c    ****       LEDSwitchOn(LED3_GPIO_Port,LED3_Pin);
 144:Src/main.c    ****     }
 145:Src/main.c    ****   }
ARM GAS  /var/folders/br/2wtqgb695v5djmfg7vx_4m7h0000gn/T//ccCxH94y.s 			page 4


 146:Src/main.c    **** }
 147:Src/main.c    **** 
 148:Src/main.c    **** 
 149:Src/main.c    **** /* USER CODE BEGIN 4 */
 150:Src/main.c    **** int pressButton(int press_1,int press_2,int press_3)
 151:Src/main.c    **** {
 152:Src/main.c    ****   int maxv=maxValue(press_1,press_2,press_3);
 153:Src/main.c    ****   
 154:Src/main.c    ****   if(maxv==press_1){
 155:Src/main.c    ****     double err=calDelta(press_1,press_2,press_3);
 156:Src/main.c    ****     if(err>=MAX_Delta)return 1;
 157:Src/main.c    ****   }
 158:Src/main.c    **** 
 159:Src/main.c    ****   if(maxv==press_2){
 160:Src/main.c    ****     double err=calDelta(press_2,press_1,press_3);
 161:Src/main.c    ****     if(err>=MAX_Delta)return 2;
 162:Src/main.c    ****   }
 163:Src/main.c    **** 
 164:Src/main.c    ****   if(maxv==press_3){
 165:Src/main.c    ****     double err=calDelta(press_3,press_1,press_2);
 166:Src/main.c    ****     if(err>=MAX_Delta)return 3;
 167:Src/main.c    ****   }
 168:Src/main.c    ****   return 0;
 169:Src/main.c    **** }
 170:Src/main.c    **** 
 171:Src/main.c    **** int maxValue(int a,int b,int c) //Calculate the biggest number among 3 of them.
 172:Src/main.c    **** {
 173:Src/main.c    ****   if(a>=max2v(b,c))return a;
 174:Src/main.c    ****   if(b>=max2v(a,c))return b;
 175:Src/main.c    ****   return c;
 176:Src/main.c    **** }
 177:Src/main.c    **** 
 178:Src/main.c    **** int max2v(int a,int b)          //Compare 2 numbers.
 179:Src/main.c    **** {
  28              		.loc 1 179 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
 180:Src/main.c    ****   if(a>=b)return a;
  34              		.loc 1 180 0
  35 0000 8842     		cmp	r0, r1
  36 0002 00DA     		bge	.L2
 181:Src/main.c    ****   else return b;
  37              		.loc 1 181 0
  38 0004 0846     		mov	r0, r1
  39              	.LVL1:
  40              	.L2:
 182:Src/main.c    **** }
  41              		.loc 1 182 0
  42 0006 7047     		bx	lr
  43              		.cfi_endproc
  44              	.LFE67:
  46              		.section	.text.maxValue,"ax",%progbits
  47              		.align	2
  48              		.global	maxValue
ARM GAS  /var/folders/br/2wtqgb695v5djmfg7vx_4m7h0000gn/T//ccCxH94y.s 			page 5


  49              		.thumb
  50              		.thumb_func
  52              	maxValue:
  53              	.LFB66:
 172:Src/main.c    ****   if(a>=max2v(b,c))return a;
  54              		.loc 1 172 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              	.LVL2:
  59 0000 70B5     		push	{r4, r5, r6, lr}
  60              	.LCFI0:
  61              		.cfi_def_cfa_offset 16
  62              		.cfi_offset 4, -16
  63              		.cfi_offset 5, -12
  64              		.cfi_offset 6, -8
  65              		.cfi_offset 14, -4
  66 0002 0446     		mov	r4, r0
  67 0004 0E46     		mov	r6, r1
  68 0006 1546     		mov	r5, r2
 173:Src/main.c    ****   if(b>=max2v(a,c))return b;
  69              		.loc 1 173 0
  70 0008 1146     		mov	r1, r2
  71              	.LVL3:
  72 000a 3046     		mov	r0, r6
  73              	.LVL4:
  74 000c FFF7FEFF 		bl	max2v
  75              	.LVL5:
  76 0010 A042     		cmp	r0, r4
  77 0012 07DD     		ble	.L6
 174:Src/main.c    ****   return c;
  78              		.loc 1 174 0
  79 0014 2946     		mov	r1, r5
  80 0016 2046     		mov	r0, r4
  81 0018 FFF7FEFF 		bl	max2v
  82              	.LVL6:
  83 001c 8642     		cmp	r6, r0
  84 001e 03DB     		blt	.L7
  85 0020 3046     		mov	r0, r6
  86 0022 70BD     		pop	{r4, r5, r6, pc}
  87              	.LVL7:
  88              	.L6:
 173:Src/main.c    ****   if(b>=max2v(a,c))return b;
  89              		.loc 1 173 0
  90 0024 2046     		mov	r0, r4
  91 0026 70BD     		pop	{r4, r5, r6, pc}
  92              	.LVL8:
  93              	.L7:
 175:Src/main.c    **** }
  94              		.loc 1 175 0
  95 0028 2846     		mov	r0, r5
 176:Src/main.c    **** 
  96              		.loc 1 176 0
  97 002a 70BD     		pop	{r4, r5, r6, pc}
  98              		.cfi_endproc
  99              	.LFE66:
 101              		.global	__aeabi_dsub
ARM GAS  /var/folders/br/2wtqgb695v5djmfg7vx_4m7h0000gn/T//ccCxH94y.s 			page 6


 102              		.global	__aeabi_dadd
 103              		.global	__aeabi_dmul
 104              		.global	__aeabi_ddiv
 105              		.section	.text.calDelta,"ax",%progbits
 106              		.align	2
 107              		.global	calDelta
 108              		.thumb
 109              		.thumb_func
 111              	calDelta:
 112              	.LFB68:
 183:Src/main.c    **** 
 184:Src/main.c    **** double calDelta(double a,double b,double c)
 185:Src/main.c    **** {
 113              		.loc 1 185 0
 114              		.cfi_startproc
 115              		@ args = 8, pretend = 0, frame = 0
 116              		@ frame_needed = 0, uses_anonymous_args = 0
 117              	.LVL9:
 118 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 119              	.LCFI1:
 120              		.cfi_def_cfa_offset 32
 121              		.cfi_offset 3, -32
 122              		.cfi_offset 4, -28
 123              		.cfi_offset 5, -24
 124              		.cfi_offset 6, -20
 125              		.cfi_offset 7, -16
 126              		.cfi_offset 8, -12
 127              		.cfi_offset 9, -8
 128              		.cfi_offset 14, -4
 129 0004 8046     		mov	r8, r0
 130 0006 8946     		mov	r9, r1
 131 0008 1646     		mov	r6, r2
 132 000a 1F46     		mov	r7, r3
 186:Src/main.c    ****   double averageDelta=(fabs(a-b)+fabs(a-c))/2.0;
 133              		.loc 1 186 0
 134 000c FFF7FEFF 		bl	__aeabi_dsub
 135              	.LVL10:
 136 0010 0546     		mov	r5, r0
 137 0012 21F00044 		bic	r4, r1, #-2147483648
 138 0016 DDE90823 		ldrd	r2, [sp, #32]
 139 001a 4046     		mov	r0, r8
 140 001c 4946     		mov	r1, r9
 141 001e FFF7FEFF 		bl	__aeabi_dsub
 142              	.LVL11:
 143 0022 0246     		mov	r2, r0
 144 0024 21F00043 		bic	r3, r1, #-2147483648
 145 0028 2846     		mov	r0, r5
 146 002a 2146     		mov	r1, r4
 147 002c FFF7FEFF 		bl	__aeabi_dadd
 148              	.LVL12:
 149 0030 0022     		movs	r2, #0
 150 0032 0B4B     		ldr	r3, .L11
 151 0034 FFF7FEFF 		bl	__aeabi_dmul
 152              	.LVL13:
 153 0038 0446     		mov	r4, r0
 154 003a 0D46     		mov	r5, r1
 155              	.LVL14:
ARM GAS  /var/folders/br/2wtqgb695v5djmfg7vx_4m7h0000gn/T//ccCxH94y.s 			page 7


 187:Src/main.c    ****   double result=averageDelta/((b+c)/2.0);
 156              		.loc 1 187 0
 157 003c DDE90823 		ldrd	r2, [sp, #32]
 158 0040 3046     		mov	r0, r6
 159 0042 3946     		mov	r1, r7
 160 0044 FFF7FEFF 		bl	__aeabi_dadd
 161              	.LVL15:
 162 0048 0022     		movs	r2, #0
 163 004a 054B     		ldr	r3, .L11
 164 004c FFF7FEFF 		bl	__aeabi_dmul
 165              	.LVL16:
 166 0050 0246     		mov	r2, r0
 167 0052 0B46     		mov	r3, r1
 168 0054 2046     		mov	r0, r4
 169 0056 2946     		mov	r1, r5
 170 0058 FFF7FEFF 		bl	__aeabi_ddiv
 171              	.LVL17:
 188:Src/main.c    ****   return result;
 189:Src/main.c    **** };
 172              		.loc 1 189 0
 173 005c BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 174              	.LVL18:
 175              	.L12:
 176              		.align	2
 177              	.L11:
 178 0060 0000E03F 		.word	1071644672
 179              		.cfi_endproc
 180              	.LFE68:
 182              		.global	__aeabi_i2d
 183              		.global	__aeabi_dcmpge
 184              		.section	.text.pressButton,"ax",%progbits
 185              		.align	2
 186              		.global	pressButton
 187              		.thumb
 188              		.thumb_func
 190              	pressButton:
 191              	.LFB65:
 151:Src/main.c    ****   int maxv=maxValue(press_1,press_2,press_3);
 192              		.loc 1 151 0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 0
 195              		@ frame_needed = 0, uses_anonymous_args = 0
 196              	.LVL19:
 197 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 198              	.LCFI2:
 199              		.cfi_def_cfa_offset 36
 200              		.cfi_offset 4, -36
 201              		.cfi_offset 5, -32
 202              		.cfi_offset 6, -28
 203              		.cfi_offset 7, -24
 204              		.cfi_offset 8, -20
 205              		.cfi_offset 9, -16
 206              		.cfi_offset 10, -12
 207              		.cfi_offset 11, -8
 208              		.cfi_offset 14, -4
 209 0004 83B0     		sub	sp, sp, #12
 210              	.LCFI3:
ARM GAS  /var/folders/br/2wtqgb695v5djmfg7vx_4m7h0000gn/T//ccCxH94y.s 			page 8


 211              		.cfi_def_cfa_offset 48
 212 0006 0546     		mov	r5, r0
 213 0008 0E46     		mov	r6, r1
 214 000a 1746     		mov	r7, r2
 152:Src/main.c    ****   
 215              		.loc 1 152 0
 216 000c FFF7FEFF 		bl	maxValue
 217              	.LVL20:
 218 0010 0446     		mov	r4, r0
 219              	.LVL21:
 154:Src/main.c    ****     double err=calDelta(press_1,press_2,press_3);
 220              		.loc 1 154 0
 221 0012 8542     		cmp	r5, r0
 222 0014 1BD1     		bne	.L14
 223              	.LBB2:
 155:Src/main.c    ****     if(err>=MAX_Delta)return 1;
 224              		.loc 1 155 0
 225 0016 2846     		mov	r0, r5
 226              	.LVL22:
 227 0018 FFF7FEFF 		bl	__aeabi_i2d
 228              	.LVL23:
 229 001c 8046     		mov	r8, r0
 230 001e 8946     		mov	r9, r1
 231 0020 3046     		mov	r0, r6
 232 0022 FFF7FEFF 		bl	__aeabi_i2d
 233              	.LVL24:
 234 0026 8246     		mov	r10, r0
 235 0028 8B46     		mov	fp, r1
 236 002a 3846     		mov	r0, r7
 237 002c FFF7FEFF 		bl	__aeabi_i2d
 238              	.LVL25:
 239 0030 CDE90001 		strd	r0, [sp]
 240 0034 5246     		mov	r2, r10
 241 0036 5B46     		mov	r3, fp
 242 0038 4046     		mov	r0, r8
 243 003a 4946     		mov	r1, r9
 244 003c FFF7FEFF 		bl	calDelta
 245              	.LVL26:
 156:Src/main.c    ****   }
 246              		.loc 1 156 0
 247 0040 27A3     		adr	r3, .L25
 248 0042 D3E90023 		ldrd	r2, [r3]
 249 0046 FFF7FEFF 		bl	__aeabi_dcmpge
 250              	.LVL27:
 251 004a 0028     		cmp	r0, #0
 252 004c 3BD1     		bne	.L18
 253              	.L14:
 254              	.LBE2:
 159:Src/main.c    ****     double err=calDelta(press_2,press_1,press_3);
 255              		.loc 1 159 0
 256 004e A642     		cmp	r6, r4
 257 0050 1AD1     		bne	.L16
 258              	.LBB3:
 160:Src/main.c    ****     if(err>=MAX_Delta)return 2;
 259              		.loc 1 160 0
 260 0052 3046     		mov	r0, r6
 261 0054 FFF7FEFF 		bl	__aeabi_i2d
ARM GAS  /var/folders/br/2wtqgb695v5djmfg7vx_4m7h0000gn/T//ccCxH94y.s 			page 9


 262              	.LVL28:
 263 0058 8046     		mov	r8, r0
 264 005a 8946     		mov	r9, r1
 265 005c 2846     		mov	r0, r5
 266 005e FFF7FEFF 		bl	__aeabi_i2d
 267              	.LVL29:
 268 0062 8246     		mov	r10, r0
 269 0064 8B46     		mov	fp, r1
 270 0066 3846     		mov	r0, r7
 271 0068 FFF7FEFF 		bl	__aeabi_i2d
 272              	.LVL30:
 273 006c CDE90001 		strd	r0, [sp]
 274 0070 5246     		mov	r2, r10
 275 0072 5B46     		mov	r3, fp
 276 0074 4046     		mov	r0, r8
 277 0076 4946     		mov	r1, r9
 278 0078 FFF7FEFF 		bl	calDelta
 279              	.LVL31:
 161:Src/main.c    ****   }
 280              		.loc 1 161 0
 281 007c 18A3     		adr	r3, .L25
 282 007e D3E90023 		ldrd	r2, [r3]
 283 0082 FFF7FEFF 		bl	__aeabi_dcmpge
 284              	.LVL32:
 285 0086 00BB     		cbnz	r0, .L19
 286              	.L16:
 287              	.LBE3:
 164:Src/main.c    ****     double err=calDelta(press_3,press_1,press_2);
 288              		.loc 1 164 0
 289 0088 A742     		cmp	r7, r4
 290 008a 20D1     		bne	.L20
 291              	.LBB4:
 165:Src/main.c    ****     if(err>=MAX_Delta)return 3;
 292              		.loc 1 165 0
 293 008c 3846     		mov	r0, r7
 294 008e FFF7FEFF 		bl	__aeabi_i2d
 295              	.LVL33:
 296 0092 8046     		mov	r8, r0
 297 0094 8946     		mov	r9, r1
 298 0096 2846     		mov	r0, r5
 299 0098 FFF7FEFF 		bl	__aeabi_i2d
 300              	.LVL34:
 301 009c 0446     		mov	r4, r0
 302              	.LVL35:
 303 009e 0D46     		mov	r5, r1
 304              	.LVL36:
 305 00a0 3046     		mov	r0, r6
 306 00a2 FFF7FEFF 		bl	__aeabi_i2d
 307              	.LVL37:
 308 00a6 CDE90001 		strd	r0, [sp]
 309 00aa 2246     		mov	r2, r4
 310 00ac 2B46     		mov	r3, r5
 311 00ae 4046     		mov	r0, r8
 312 00b0 4946     		mov	r1, r9
 313 00b2 FFF7FEFF 		bl	calDelta
 314              	.LVL38:
 166:Src/main.c    ****   }
ARM GAS  /var/folders/br/2wtqgb695v5djmfg7vx_4m7h0000gn/T//ccCxH94y.s 			page 10


 315              		.loc 1 166 0
 316 00b6 0AA3     		adr	r3, .L25
 317 00b8 D3E90023 		ldrd	r2, [r3]
 318 00bc FFF7FEFF 		bl	__aeabi_dcmpge
 319              	.LVL39:
 320 00c0 38B1     		cbz	r0, .L23
 321 00c2 0320     		movs	r0, #3
 322 00c4 06E0     		b	.L15
 323              	.LVL40:
 324              	.L18:
 325              	.LBE4:
 326              	.LBB5:
 156:Src/main.c    ****   }
 327              		.loc 1 156 0
 328 00c6 0120     		movs	r0, #1
 329 00c8 04E0     		b	.L15
 330              	.L19:
 331              	.LBE5:
 332              	.LBB6:
 161:Src/main.c    ****   }
 333              		.loc 1 161 0
 334 00ca 0220     		movs	r0, #2
 335 00cc 02E0     		b	.L15
 336              	.L20:
 337              	.LBE6:
 168:Src/main.c    **** }
 338              		.loc 1 168 0
 339 00ce 0020     		movs	r0, #0
 340 00d0 00E0     		b	.L15
 341              	.LVL41:
 342              	.L23:
 343 00d2 0020     		movs	r0, #0
 344              	.L15:
 169:Src/main.c    **** 
 345              		.loc 1 169 0
 346 00d4 03B0     		add	sp, sp, #12
 347              	.LCFI4:
 348              		.cfi_def_cfa_offset 36
 349              		@ sp needed
 350 00d6 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 351              	.LVL42:
 352              	.L26:
 353 00da 00BFAFF3 		.align	3
 353      0080
 354              	.L25:
 355 00e0 33333333 		.word	858993459
 356 00e4 3333C33F 		.word	1069757235
 357              		.cfi_endproc
 358              	.LFE65:
 360              		.section	.text.LED_KEY_SwitchOn,"ax",%progbits
 361              		.align	2
 362              		.global	LED_KEY_SwitchOn
 363              		.thumb
 364              		.thumb_func
 366              	LED_KEY_SwitchOn:
 367              	.LFB69:
 190:Src/main.c    **** 
ARM GAS  /var/folders/br/2wtqgb695v5djmfg7vx_4m7h0000gn/T//ccCxH94y.s 			page 11


 191:Src/main.c    **** void LED_KEY_SwitchOn(GPIO_TypeDef* KeyPort, uint16_t KeyPin,GPIO_TypeDef* LedPort, uint16_t LedPin
 192:Src/main.c    **** {
 368              		.loc 1 192 0
 369              		.cfi_startproc
 370              		@ args = 0, pretend = 0, frame = 0
 371              		@ frame_needed = 0, uses_anonymous_args = 0
 372              	.LVL43:
 373 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 374              	.LCFI5:
 375              		.cfi_def_cfa_offset 24
 376              		.cfi_offset 3, -24
 377              		.cfi_offset 4, -20
 378              		.cfi_offset 5, -16
 379              		.cfi_offset 6, -12
 380              		.cfi_offset 7, -8
 381              		.cfi_offset 14, -4
 382 0002 0446     		mov	r4, r0
 383 0004 0D46     		mov	r5, r1
 384 0006 1646     		mov	r6, r2
 385 0008 1F46     		mov	r7, r3
 193:Src/main.c    ****   if(!HAL_GPIO_ReadPin(KeyPort,KeyPin)){
 386              		.loc 1 193 0
 387 000a FFF7FEFF 		bl	HAL_GPIO_ReadPin
 388              	.LVL44:
 389 000e 90B9     		cbnz	r0, .L27
 194:Src/main.c    ****       HAL_Delay(20);            //延时去抖动
 390              		.loc 1 194 0
 391 0010 1420     		movs	r0, #20
 392 0012 FFF7FEFF 		bl	HAL_Delay
 393              	.LVL45:
 195:Src/main.c    ****       if(!HAL_GPIO_ReadPin(KeyPort,KeyPin)){
 394              		.loc 1 195 0
 395 0016 2946     		mov	r1, r5
 396 0018 2046     		mov	r0, r4
 397 001a FFF7FEFF 		bl	HAL_GPIO_ReadPin
 398              	.LVL46:
 399 001e 50B9     		cbnz	r0, .L27
 196:Src/main.c    ****           HAL_GPIO_WritePin(LedPort,LedPin,1);
 400              		.loc 1 196 0
 401 0020 0122     		movs	r2, #1
 402 0022 3946     		mov	r1, r7
 403 0024 3046     		mov	r0, r6
 404 0026 FFF7FEFF 		bl	HAL_GPIO_WritePin
 405              	.LVL47:
 406              	.L29:
 197:Src/main.c    ****           while(HAL_GPIO_ReadPin(KeyPort,KeyPin));
 407              		.loc 1 197 0 discriminator 1
 408 002a 2946     		mov	r1, r5
 409 002c 2046     		mov	r0, r4
 410 002e FFF7FEFF 		bl	HAL_GPIO_ReadPin
 411              	.LVL48:
 412 0032 0028     		cmp	r0, #0
 413 0034 F9D1     		bne	.L29
 414              	.L27:
 415 0036 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 416              		.cfi_endproc
 417              	.LFE69:
ARM GAS  /var/folders/br/2wtqgb695v5djmfg7vx_4m7h0000gn/T//ccCxH94y.s 			page 12


 419              		.section	.text.LEDSwitchOn,"ax",%progbits
 420              		.align	2
 421              		.global	LEDSwitchOn
 422              		.thumb
 423              		.thumb_func
 425              	LEDSwitchOn:
 426              	.LFB70:
 198:Src/main.c    ****       }
 199:Src/main.c    ****   }
 200:Src/main.c    **** }
 201:Src/main.c    **** 
 202:Src/main.c    **** void LEDSwitchOn(GPIO_TypeDef* LedPort, uint16_t LedPin)
 203:Src/main.c    **** {
 427              		.loc 1 203 0
 428              		.cfi_startproc
 429              		@ args = 0, pretend = 0, frame = 0
 430              		@ frame_needed = 0, uses_anonymous_args = 0
 431              	.LVL49:
 432 0000 08B5     		push	{r3, lr}
 433              	.LCFI6:
 434              		.cfi_def_cfa_offset 8
 435              		.cfi_offset 3, -8
 436              		.cfi_offset 14, -4
 204:Src/main.c    ****   HAL_GPIO_WritePin(LedPort,LedPin,1);
 437              		.loc 1 204 0
 438 0002 0122     		movs	r2, #1
 439 0004 FFF7FEFF 		bl	HAL_GPIO_WritePin
 440              	.LVL50:
 441 0008 08BD     		pop	{r3, pc}
 442              		.cfi_endproc
 443              	.LFE70:
 445 000a 00BF     		.section	.text.LEDSwitchOff,"ax",%progbits
 446              		.align	2
 447              		.global	LEDSwitchOff
 448              		.thumb
 449              		.thumb_func
 451              	LEDSwitchOff:
 452              	.LFB71:
 205:Src/main.c    **** }
 206:Src/main.c    **** 
 207:Src/main.c    **** void LEDSwitchOff(GPIO_TypeDef* LedPort, uint16_t LedPin)
 208:Src/main.c    **** {
 453              		.loc 1 208 0
 454              		.cfi_startproc
 455              		@ args = 0, pretend = 0, frame = 0
 456              		@ frame_needed = 0, uses_anonymous_args = 0
 457              	.LVL51:
 458 0000 08B5     		push	{r3, lr}
 459              	.LCFI7:
 460              		.cfi_def_cfa_offset 8
 461              		.cfi_offset 3, -8
 462              		.cfi_offset 14, -4
 209:Src/main.c    ****   HAL_GPIO_WritePin(LedPort,LedPin,0);
 463              		.loc 1 209 0
 464 0002 0022     		movs	r2, #0
 465 0004 FFF7FEFF 		bl	HAL_GPIO_WritePin
 466              	.LVL52:
ARM GAS  /var/folders/br/2wtqgb695v5djmfg7vx_4m7h0000gn/T//ccCxH94y.s 			page 13


 467 0008 08BD     		pop	{r3, pc}
 468              		.cfi_endproc
 469              	.LFE71:
 471 000a 00BF     		.section	.text.SystemClock_Config,"ax",%progbits
 472              		.align	2
 473              		.global	SystemClock_Config
 474              		.thumb
 475              		.thumb_func
 477              	SystemClock_Config:
 478              	.LFB72:
 210:Src/main.c    **** }
 211:Src/main.c    **** /* USER CODE END 4 */
 212:Src/main.c    **** 
 213:Src/main.c    **** 
 214:Src/main.c    **** 
 215:Src/main.c    **** 
 216:Src/main.c    **** 
 217:Src/main.c    **** 
 218:Src/main.c    **** 
 219:Src/main.c    **** 
 220:Src/main.c    **** 
 221:Src/main.c    **** 
 222:Src/main.c    **** 
 223:Src/main.c    **** 
 224:Src/main.c    **** 
 225:Src/main.c    **** 
 226:Src/main.c    **** 
 227:Src/main.c    **** 
 228:Src/main.c    **** 
 229:Src/main.c    **** 
 230:Src/main.c    **** 
 231:Src/main.c    **** 
 232:Src/main.c    **** 
 233:Src/main.c    **** 
 234:Src/main.c    **** /********************************************Auto Generated****************************************
 235:Src/main.c    **** 
 236:Src/main.c    **** /**
 237:Src/main.c    ****   * @brief System Clock Configuration
 238:Src/main.c    ****   * @retval None
 239:Src/main.c    ****   */
 240:Src/main.c    **** void SystemClock_Config(void)
 241:Src/main.c    **** {
 479              		.loc 1 241 0
 480              		.cfi_startproc
 481              		@ args = 0, pretend = 0, frame = 80
 482              		@ frame_needed = 0, uses_anonymous_args = 0
 483 0000 30B5     		push	{r4, r5, lr}
 484              	.LCFI8:
 485              		.cfi_def_cfa_offset 12
 486              		.cfi_offset 4, -12
 487              		.cfi_offset 5, -8
 488              		.cfi_offset 14, -4
 489 0002 95B0     		sub	sp, sp, #84
 490              	.LCFI9:
 491              		.cfi_def_cfa_offset 96
 242:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 492              		.loc 1 242 0
ARM GAS  /var/folders/br/2wtqgb695v5djmfg7vx_4m7h0000gn/T//ccCxH94y.s 			page 14


 493 0004 2822     		movs	r2, #40
 494 0006 0021     		movs	r1, #0
 495 0008 0DEB0200 		add	r0, sp, r2
 496 000c FFF7FEFF 		bl	memset
 497              	.LVL53:
 243:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 498              		.loc 1 243 0
 499 0010 0024     		movs	r4, #0
 500 0012 0594     		str	r4, [sp, #20]
 501 0014 0694     		str	r4, [sp, #24]
 502 0016 0794     		str	r4, [sp, #28]
 503 0018 0894     		str	r4, [sp, #32]
 504 001a 0994     		str	r4, [sp, #36]
 244:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 505              		.loc 1 244 0
 506 001c 0194     		str	r4, [sp, #4]
 507 001e 0294     		str	r4, [sp, #8]
 508 0020 0394     		str	r4, [sp, #12]
 509 0022 0494     		str	r4, [sp, #16]
 245:Src/main.c    **** 
 246:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 247:Src/main.c    ****   */
 248:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 510              		.loc 1 248 0
 511 0024 0122     		movs	r2, #1
 512 0026 0A92     		str	r2, [sp, #40]
 249:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 513              		.loc 1 249 0
 514 0028 4FF48033 		mov	r3, #65536
 515 002c 0B93     		str	r3, [sp, #44]
 250:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 251:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 516              		.loc 1 251 0
 517 002e 0E92     		str	r2, [sp, #56]
 252:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 518              		.loc 1 252 0
 519 0030 0225     		movs	r5, #2
 520 0032 1195     		str	r5, [sp, #68]
 253:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 521              		.loc 1 253 0
 522 0034 1293     		str	r3, [sp, #72]
 254:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 523              		.loc 1 254 0
 524 0036 4FF4E013 		mov	r3, #1835008
 525 003a 1393     		str	r3, [sp, #76]
 255:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 526              		.loc 1 255 0
 527 003c 0AA8     		add	r0, sp, #40
 528 003e FFF7FEFF 		bl	HAL_RCC_OscConfig
 529              	.LVL54:
 256:Src/main.c    ****   {
 257:Src/main.c    ****     Error_Handler();
 258:Src/main.c    ****   }
 259:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 260:Src/main.c    ****   */
 261:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 530              		.loc 1 261 0
ARM GAS  /var/folders/br/2wtqgb695v5djmfg7vx_4m7h0000gn/T//ccCxH94y.s 			page 15


 531 0042 0F23     		movs	r3, #15
 532 0044 0593     		str	r3, [sp, #20]
 262:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 263:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 533              		.loc 1 263 0
 534 0046 0695     		str	r5, [sp, #24]
 264:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 535              		.loc 1 264 0
 536 0048 0794     		str	r4, [sp, #28]
 265:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 537              		.loc 1 265 0
 538 004a 4FF48063 		mov	r3, #1024
 539 004e 0893     		str	r3, [sp, #32]
 266:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 540              		.loc 1 266 0
 541 0050 0994     		str	r4, [sp, #36]
 267:Src/main.c    **** 
 268:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 542              		.loc 1 268 0
 543 0052 2946     		mov	r1, r5
 544 0054 05A8     		add	r0, sp, #20
 545 0056 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 546              	.LVL55:
 269:Src/main.c    ****   {
 270:Src/main.c    ****     Error_Handler();
 271:Src/main.c    ****   }
 272:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 547              		.loc 1 272 0
 548 005a 0195     		str	r5, [sp, #4]
 273:Src/main.c    ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 549              		.loc 1 273 0
 550 005c 4FF40043 		mov	r3, #32768
 551 0060 0393     		str	r3, [sp, #12]
 274:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 552              		.loc 1 274 0
 553 0062 01A8     		add	r0, sp, #4
 554 0064 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 555              	.LVL56:
 275:Src/main.c    ****   {
 276:Src/main.c    ****     Error_Handler();
 277:Src/main.c    ****   }
 278:Src/main.c    **** }
 556              		.loc 1 278 0
 557 0068 15B0     		add	sp, sp, #84
 558              	.LCFI10:
 559              		.cfi_def_cfa_offset 12
 560              		@ sp needed
 561 006a 30BD     		pop	{r4, r5, pc}
 562              		.cfi_endproc
 563              	.LFE72:
 565              		.section	.text.main,"ax",%progbits
 566              		.align	2
 567              		.global	main
 568              		.thumb
 569              		.thumb_func
 571              	main:
 572              	.LFB64:
ARM GAS  /var/folders/br/2wtqgb695v5djmfg7vx_4m7h0000gn/T//ccCxH94y.s 			page 16


  84:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 573              		.loc 1 84 0
 574              		.cfi_startproc
 575              		@ Volatile: function does not return.
 576              		@ args = 0, pretend = 0, frame = 0
 577              		@ frame_needed = 0, uses_anonymous_args = 0
 578 0000 08B5     		push	{r3, lr}
 579              	.LCFI11:
 580              		.cfi_def_cfa_offset 8
 581              		.cfi_offset 3, -8
 582              		.cfi_offset 14, -4
  87:Src/main.c    ****   /* Configure the system clock */
 583              		.loc 1 87 0
 584 0002 FFF7FEFF 		bl	HAL_Init
 585              	.LVL57:
  89:Src/main.c    ****   /* Initialize all configured peripherals */
 586              		.loc 1 89 0
 587 0006 FFF7FEFF 		bl	SystemClock_Config
 588              	.LVL58:
  91:Src/main.c    ****   MX_DMA_Init();
 589              		.loc 1 91 0
 590 000a FFF7FEFF 		bl	MX_GPIO_Init
 591              	.LVL59:
  92:Src/main.c    ****   MX_ADC1_Init();
 592              		.loc 1 92 0
 593 000e FFF7FEFF 		bl	MX_DMA_Init
 594              	.LVL60:
  93:Src/main.c    **** 
 595              		.loc 1 93 0
 596 0012 FFF7FEFF 		bl	MX_ADC1_Init
 597              	.LVL61:
  97:Src/main.c    ****   HAL_GPIO_WritePin(LED1_GPIO_Port,LED1_Pin,0);
 598              		.loc 1 97 0
 599 0016 7822     		movs	r2, #120
 600 0018 5749     		ldr	r1, .L46
 601 001a 5848     		ldr	r0, .L46+4
 602 001c FFF7FEFF 		bl	HAL_ADC_Start_DMA
 603              	.LVL62:
  98:Src/main.c    ****   HAL_GPIO_WritePin(LED2_GPIO_Port,LED2_Pin,0);
 604              		.loc 1 98 0
 605 0020 574C     		ldr	r4, .L46+8
 606 0022 0022     		movs	r2, #0
 607 0024 0121     		movs	r1, #1
 608 0026 2046     		mov	r0, r4
 609 0028 FFF7FEFF 		bl	HAL_GPIO_WritePin
 610              	.LVL63:
  99:Src/main.c    ****   HAL_GPIO_WritePin(LED3_GPIO_Port,LED3_Pin,0);
 611              		.loc 1 99 0
 612 002c 0022     		movs	r2, #0
 613 002e 0221     		movs	r1, #2
 614 0030 2046     		mov	r0, r4
 615 0032 FFF7FEFF 		bl	HAL_GPIO_WritePin
 616              	.LVL64:
 100:Src/main.c    ****   /* USER CODE END 2 */
 617              		.loc 1 100 0
 618 0036 0022     		movs	r2, #0
 619 0038 4FF40071 		mov	r1, #512
ARM GAS  /var/folders/br/2wtqgb695v5djmfg7vx_4m7h0000gn/T//ccCxH94y.s 			page 17


 620 003c 2046     		mov	r0, r4
 621 003e FFF7FEFF 		bl	HAL_GPIO_WritePin
 622              	.LVL65:
 623              	.L43:
 106:Src/main.c    ****     Pressure_1=Pressure_2=Pressure_3=0;
 624              		.loc 1 106 0
 625 0042 4FF4FA70 		mov	r0, #500
 626 0046 FFF7FEFF 		bl	HAL_Delay
 627              	.LVL66:
 107:Src/main.c    **** 
 628              		.loc 1 107 0
 629 004a 0023     		movs	r3, #0
 630 004c 4D4A     		ldr	r2, .L46+12
 631 004e 1360     		str	r3, [r2]
 632 0050 4D4A     		ldr	r2, .L46+16
 633 0052 1360     		str	r3, [r2]
 634 0054 4D4A     		ldr	r2, .L46+20
 635 0056 1360     		str	r3, [r2]
 109:Src/main.c    ****       Pressure_1+=ADC_Value[i++];
 636              		.loc 1 109 0
 637 0058 4D4A     		ldr	r2, .L46+24
 638 005a 1370     		strb	r3, [r2]
 639 005c 19E0     		b	.L38
 640              	.L39:
 110:Src/main.c    ****       Pressure_2+=ADC_Value[i++];
 641              		.loc 1 110 0
 642 005e 5A1C     		adds	r2, r3, #1
 643 0060 D2B2     		uxtb	r2, r2
 644 0062 4549     		ldr	r1, .L46
 645 0064 51F82330 		ldr	r3, [r1, r3, lsl #2]
 646 0068 4848     		ldr	r0, .L46+20
 647 006a 0468     		ldr	r4, [r0]
 648 006c 2344     		add	r3, r3, r4
 649 006e 0360     		str	r3, [r0]
 111:Src/main.c    ****       Pressure_3+=ADC_Value[i++];
 650              		.loc 1 111 0
 651 0070 531C     		adds	r3, r2, #1
 652 0072 DBB2     		uxtb	r3, r3
 653 0074 51F82220 		ldr	r2, [r1, r2, lsl #2]
 654 0078 4348     		ldr	r0, .L46+16
 655 007a 0468     		ldr	r4, [r0]
 656 007c 2244     		add	r2, r2, r4
 657 007e 0260     		str	r2, [r0]
 112:Src/main.c    ****     }
 658              		.loc 1 112 0
 659 0080 581C     		adds	r0, r3, #1
 660 0082 434A     		ldr	r2, .L46+24
 661 0084 1070     		strb	r0, [r2]
 662 0086 51F82330 		ldr	r3, [r1, r3, lsl #2]
 663 008a 3E4A     		ldr	r2, .L46+12
 664 008c 1168     		ldr	r1, [r2]
 665 008e 0B44     		add	r3, r3, r1
 666 0090 1360     		str	r3, [r2]
 667              	.L38:
 109:Src/main.c    ****       Pressure_1+=ADC_Value[i++];
 668              		.loc 1 109 0 discriminator 1
 669 0092 3F4B     		ldr	r3, .L46+24
ARM GAS  /var/folders/br/2wtqgb695v5djmfg7vx_4m7h0000gn/T//ccCxH94y.s 			page 18


 670 0094 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 671 0096 632B     		cmp	r3, #99
 672 0098 E1D9     		bls	.L39
 114:Src/main.c    ****     Pressure_2/=40;
 673              		.loc 1 114 0
 674 009a 3C4B     		ldr	r3, .L46+20
 675 009c 1868     		ldr	r0, [r3]
 676 009e 3D4A     		ldr	r2, .L46+28
 677 00a0 A2FB0010 		umull	r1, r0, r2, r0
 678 00a4 4009     		lsrs	r0, r0, #5
 679 00a6 1860     		str	r0, [r3]
 115:Src/main.c    ****     Pressure_3/=40;
 680              		.loc 1 115 0
 681 00a8 374B     		ldr	r3, .L46+16
 682 00aa 1968     		ldr	r1, [r3]
 683 00ac A2FB0141 		umull	r4, r1, r2, r1
 684 00b0 4909     		lsrs	r1, r1, #5
 685 00b2 1960     		str	r1, [r3]
 116:Src/main.c    **** 
 686              		.loc 1 116 0
 687 00b4 334C     		ldr	r4, .L46+12
 688 00b6 2368     		ldr	r3, [r4]
 689 00b8 A2FB0332 		umull	r3, r2, r2, r3
 690 00bc 5209     		lsrs	r2, r2, #5
 691 00be 2260     		str	r2, [r4]
 119:Src/main.c    ****       LEDSwitchOn(LED1_GPIO_Port,LED1_Pin);
 692              		.loc 1 119 0
 693 00c0 FFF7FEFF 		bl	pressButton
 694              	.LVL67:
 695 00c4 0128     		cmp	r0, #1
 696 00c6 0DD1     		bne	.L40
 120:Src/main.c    ****       
 697              		.loc 1 120 0
 698 00c8 2D4C     		ldr	r4, .L46+8
 699 00ca 0121     		movs	r1, #1
 700 00cc 2046     		mov	r0, r4
 701 00ce FFF7FEFF 		bl	LEDSwitchOn
 702              	.LVL68:
 122:Src/main.c    ****       LEDSwitchOff(LED3_GPIO_Port,LED3_Pin);
 703              		.loc 1 122 0
 704 00d2 0221     		movs	r1, #2
 705 00d4 2046     		mov	r0, r4
 706 00d6 FFF7FEFF 		bl	LEDSwitchOff
 707              	.LVL69:
 123:Src/main.c    ****     }
 708              		.loc 1 123 0
 709 00da 4FF40071 		mov	r1, #512
 710 00de 2046     		mov	r0, r4
 711 00e0 FFF7FEFF 		bl	LEDSwitchOff
 712              	.LVL70:
 713              	.L40:
 126:Src/main.c    ****       LEDSwitchOn(LED2_GPIO_Port,LED2_Pin);
 714              		.loc 1 126 0
 715 00e4 274B     		ldr	r3, .L46+12
 716 00e6 1A68     		ldr	r2, [r3]
 717 00e8 274B     		ldr	r3, .L46+16
 718 00ea 1968     		ldr	r1, [r3]
ARM GAS  /var/folders/br/2wtqgb695v5djmfg7vx_4m7h0000gn/T//ccCxH94y.s 			page 19


 719 00ec 274B     		ldr	r3, .L46+20
 720 00ee 1868     		ldr	r0, [r3]
 721 00f0 FFF7FEFF 		bl	pressButton
 722              	.LVL71:
 723 00f4 0228     		cmp	r0, #2
 724 00f6 0DD1     		bne	.L41
 127:Src/main.c    **** 
 725              		.loc 1 127 0
 726 00f8 214C     		ldr	r4, .L46+8
 727 00fa 0221     		movs	r1, #2
 728 00fc 2046     		mov	r0, r4
 729 00fe FFF7FEFF 		bl	LEDSwitchOn
 730              	.LVL72:
 129:Src/main.c    ****       LEDSwitchOff(LED3_GPIO_Port,LED3_Pin);
 731              		.loc 1 129 0
 732 0102 0121     		movs	r1, #1
 733 0104 2046     		mov	r0, r4
 734 0106 FFF7FEFF 		bl	LEDSwitchOff
 735              	.LVL73:
 130:Src/main.c    ****     }
 736              		.loc 1 130 0
 737 010a 4FF40071 		mov	r1, #512
 738 010e 2046     		mov	r0, r4
 739 0110 FFF7FEFF 		bl	LEDSwitchOff
 740              	.LVL74:
 741              	.L41:
 133:Src/main.c    ****       LEDSwitchOn(LED3_GPIO_Port,LED3_Pin);
 742              		.loc 1 133 0
 743 0114 1B4B     		ldr	r3, .L46+12
 744 0116 1A68     		ldr	r2, [r3]
 745 0118 1B4B     		ldr	r3, .L46+16
 746 011a 1968     		ldr	r1, [r3]
 747 011c 1B4B     		ldr	r3, .L46+20
 748 011e 1868     		ldr	r0, [r3]
 749 0120 FFF7FEFF 		bl	pressButton
 750              	.LVL75:
 751 0124 0328     		cmp	r0, #3
 752 0126 0DD1     		bne	.L42
 134:Src/main.c    **** 
 753              		.loc 1 134 0
 754 0128 154C     		ldr	r4, .L46+8
 755 012a 4FF40071 		mov	r1, #512
 756 012e 2046     		mov	r0, r4
 757 0130 FFF7FEFF 		bl	LEDSwitchOn
 758              	.LVL76:
 136:Src/main.c    ****       LEDSwitchOff(LED2_GPIO_Port,LED2_Pin);
 759              		.loc 1 136 0
 760 0134 0121     		movs	r1, #1
 761 0136 2046     		mov	r0, r4
 762 0138 FFF7FEFF 		bl	LEDSwitchOff
 763              	.LVL77:
 137:Src/main.c    ****     }
 764              		.loc 1 137 0
 765 013c 0221     		movs	r1, #2
 766 013e 2046     		mov	r0, r4
 767 0140 FFF7FEFF 		bl	LEDSwitchOff
 768              	.LVL78:
ARM GAS  /var/folders/br/2wtqgb695v5djmfg7vx_4m7h0000gn/T//ccCxH94y.s 			page 20


 769              	.L42:
 140:Src/main.c    ****       LEDSwitchOn(LED1_GPIO_Port,LED1_Pin);
 770              		.loc 1 140 0
 771 0144 0F4B     		ldr	r3, .L46+12
 772 0146 1A68     		ldr	r2, [r3]
 773 0148 0F4B     		ldr	r3, .L46+16
 774 014a 1968     		ldr	r1, [r3]
 775 014c 0F4B     		ldr	r3, .L46+20
 776 014e 1868     		ldr	r0, [r3]
 777 0150 FFF7FEFF 		bl	pressButton
 778              	.LVL79:
 779 0154 0028     		cmp	r0, #0
 780 0156 7FF474AF 		bne	.L43
 141:Src/main.c    ****       LEDSwitchOn(LED2_GPIO_Port,LED2_Pin);
 781              		.loc 1 141 0
 782 015a 094C     		ldr	r4, .L46+8
 783 015c 0121     		movs	r1, #1
 784 015e 2046     		mov	r0, r4
 785 0160 FFF7FEFF 		bl	LEDSwitchOn
 786              	.LVL80:
 142:Src/main.c    ****       LEDSwitchOn(LED3_GPIO_Port,LED3_Pin);
 787              		.loc 1 142 0
 788 0164 0221     		movs	r1, #2
 789 0166 2046     		mov	r0, r4
 790 0168 FFF7FEFF 		bl	LEDSwitchOn
 791              	.LVL81:
 143:Src/main.c    ****     }
 792              		.loc 1 143 0
 793 016c 4FF40071 		mov	r1, #512
 794 0170 2046     		mov	r0, r4
 795 0172 FFF7FEFF 		bl	LEDSwitchOn
 796              	.LVL82:
 797 0176 64E7     		b	.L43
 798              	.L47:
 799              		.align	2
 800              	.L46:
 801 0178 00000000 		.word	ADC_Value
 802 017c 00000000 		.word	hadc1
 803 0180 000C0140 		.word	1073810432
 804 0184 00000000 		.word	Pressure_3
 805 0188 00000000 		.word	Pressure_2
 806 018c 00000000 		.word	Pressure_1
 807 0190 00000000 		.word	i
 808 0194 CDCCCCCC 		.word	-858993459
 809              		.cfi_endproc
 810              	.LFE64:
 812              		.section	.text.Error_Handler,"ax",%progbits
 813              		.align	2
 814              		.global	Error_Handler
 815              		.thumb
 816              		.thumb_func
 818              	Error_Handler:
 819              	.LFB73:
 279:Src/main.c    **** 
 280:Src/main.c    **** /**
 281:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 282:Src/main.c    ****   * @retval None
ARM GAS  /var/folders/br/2wtqgb695v5djmfg7vx_4m7h0000gn/T//ccCxH94y.s 			page 21


 283:Src/main.c    ****   */
 284:Src/main.c    **** void Error_Handler(void)
 285:Src/main.c    **** {
 820              		.loc 1 285 0
 821              		.cfi_startproc
 822              		@ args = 0, pretend = 0, frame = 0
 823              		@ frame_needed = 0, uses_anonymous_args = 0
 824              		@ link register save eliminated.
 825 0000 7047     		bx	lr
 826              		.cfi_endproc
 827              	.LFE73:
 829              		.comm	i,1,1
 830              		.comm	delta_3,8,8
 831              		.comm	delta_2,8,8
 832              		.comm	delta_1,8,8
 833              		.comm	Pressure_3,4,4
 834              		.comm	Pressure_2,4,4
 835              		.comm	Pressure_1,4,4
 836              		.comm	ADC_Value,480,4
 837 0002 00BF     		.text
 838              	.Letext0:
 839              		.file 2 "/Users/apple/gcc-arm-none-eabi/arm-none-eabi/include/machine/_default_types.h"
 840              		.file 3 "/Users/apple/gcc-arm-none-eabi/arm-none-eabi/include/sys/_stdint.h"
 841              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 842              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 843              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 844              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 845              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 846              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 847              		.file 10 "Drivers/CMSIS/Include/core_cm3.h"
 848              		.file 11 "Inc/adc.h"
 849              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 850              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 851              		.file 14 "Inc/gpio.h"
 852              		.file 15 "Inc/dma.h"
ARM GAS  /var/folders/br/2wtqgb695v5djmfg7vx_4m7h0000gn/T//ccCxH94y.s 			page 22


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/br/2wtqgb695v5djmfg7vx_4m7h0000gn/T//ccCxH94y.s:20     .text.max2v:0000000000000000 $t
/var/folders/br/2wtqgb695v5djmfg7vx_4m7h0000gn/T//ccCxH94y.s:25     .text.max2v:0000000000000000 max2v
/var/folders/br/2wtqgb695v5djmfg7vx_4m7h0000gn/T//ccCxH94y.s:47     .text.maxValue:0000000000000000 $t
/var/folders/br/2wtqgb695v5djmfg7vx_4m7h0000gn/T//ccCxH94y.s:52     .text.maxValue:0000000000000000 maxValue
/var/folders/br/2wtqgb695v5djmfg7vx_4m7h0000gn/T//ccCxH94y.s:106    .text.calDelta:0000000000000000 $t
/var/folders/br/2wtqgb695v5djmfg7vx_4m7h0000gn/T//ccCxH94y.s:111    .text.calDelta:0000000000000000 calDelta
/var/folders/br/2wtqgb695v5djmfg7vx_4m7h0000gn/T//ccCxH94y.s:178    .text.calDelta:0000000000000060 $d
/var/folders/br/2wtqgb695v5djmfg7vx_4m7h0000gn/T//ccCxH94y.s:185    .text.pressButton:0000000000000000 $t
/var/folders/br/2wtqgb695v5djmfg7vx_4m7h0000gn/T//ccCxH94y.s:190    .text.pressButton:0000000000000000 pressButton
/var/folders/br/2wtqgb695v5djmfg7vx_4m7h0000gn/T//ccCxH94y.s:355    .text.pressButton:00000000000000e0 $d
/var/folders/br/2wtqgb695v5djmfg7vx_4m7h0000gn/T//ccCxH94y.s:361    .text.LED_KEY_SwitchOn:0000000000000000 $t
/var/folders/br/2wtqgb695v5djmfg7vx_4m7h0000gn/T//ccCxH94y.s:366    .text.LED_KEY_SwitchOn:0000000000000000 LED_KEY_SwitchOn
/var/folders/br/2wtqgb695v5djmfg7vx_4m7h0000gn/T//ccCxH94y.s:420    .text.LEDSwitchOn:0000000000000000 $t
/var/folders/br/2wtqgb695v5djmfg7vx_4m7h0000gn/T//ccCxH94y.s:425    .text.LEDSwitchOn:0000000000000000 LEDSwitchOn
/var/folders/br/2wtqgb695v5djmfg7vx_4m7h0000gn/T//ccCxH94y.s:446    .text.LEDSwitchOff:0000000000000000 $t
/var/folders/br/2wtqgb695v5djmfg7vx_4m7h0000gn/T//ccCxH94y.s:451    .text.LEDSwitchOff:0000000000000000 LEDSwitchOff
/var/folders/br/2wtqgb695v5djmfg7vx_4m7h0000gn/T//ccCxH94y.s:472    .text.SystemClock_Config:0000000000000000 $t
/var/folders/br/2wtqgb695v5djmfg7vx_4m7h0000gn/T//ccCxH94y.s:477    .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/br/2wtqgb695v5djmfg7vx_4m7h0000gn/T//ccCxH94y.s:566    .text.main:0000000000000000 $t
/var/folders/br/2wtqgb695v5djmfg7vx_4m7h0000gn/T//ccCxH94y.s:571    .text.main:0000000000000000 main
/var/folders/br/2wtqgb695v5djmfg7vx_4m7h0000gn/T//ccCxH94y.s:801    .text.main:0000000000000178 $d
                            *COM*:00000000000001e0 ADC_Value
                            *COM*:0000000000000004 Pressure_3
                            *COM*:0000000000000004 Pressure_2
                            *COM*:0000000000000004 Pressure_1
                            *COM*:0000000000000001 i
/var/folders/br/2wtqgb695v5djmfg7vx_4m7h0000gn/T//ccCxH94y.s:813    .text.Error_Handler:0000000000000000 $t
/var/folders/br/2wtqgb695v5djmfg7vx_4m7h0000gn/T//ccCxH94y.s:818    .text.Error_Handler:0000000000000000 Error_Handler
                            *COM*:0000000000000008 delta_3
                            *COM*:0000000000000008 delta_2
                            *COM*:0000000000000008 delta_1
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
__aeabi_dsub
__aeabi_dadd
__aeabi_dmul
__aeabi_ddiv
__aeabi_i2d
__aeabi_dcmpge
HAL_GPIO_ReadPin
HAL_Delay
HAL_GPIO_WritePin
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_ADC1_Init
HAL_ADC_Start_DMA
hadc1
